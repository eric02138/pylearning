Last login: Tue Jan 23 09:28:17 on ttys000
emattison@AMER-6J74N4MC dataviz % python
Python 3.9.16 (main, Apr  3 2023, 16:09:37) 
[Clang 14.0.3 (clang-1403.0.22.14.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> "hello" * 5
'hellohellohellohellohello'
>>> int("H")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: invalid literal for int() with base 10: 'H'
>>> 
emattison@AMER-6J74N4MC dataviz % pipenv shell
Launching subshell in virtual environment...
 . /Users/emattison/.local/share/virtualenvs/dataviz-sQsnighm/bin/activate
emattison@AMER-6J74N4MC dataviz %  . /Users/emattison/.local/share/virtualenvs/dataviz-sQsnighm/bin/activate
(dataviz) emattison@AMER-6J74N4MC dataviz % 
(dataviz) emattison@AMER-6J74N4MC dataviz % 
(dataviz) emattison@AMER-6J74N4MC dataviz % 
(dataviz) emattison@AMER-6J74N4MC dataviz % 
(dataviz) emattison@AMER-6J74N4MC dataviz % 
(dataviz) emattison@AMER-6J74N4MC dataviz %  . /Users/emattison/.local/share/virtualenvs/dataviz-sQsnighm/bin/activatewd
.: no such file or directory: /Users/emattison/.local/share/virtualenvs/dataviz-sQsnighm/bin/activatewd
(dataviz) emattison@AMER-6J74N4MC dataviz % pwd
/Users/emattison/devel/dataviz
(dataviz) emattison@AMER-6J74N4MC dataviz % ll
total 7008
drwxr-xr-x  10 emattison  staff   320B Jan 22 11:41 .
drwxr-xr-x  16 emattison  staff   512B Jan 19 12:53 ..
-rw-r--r--@  1 emattison  staff   6.0K Jan 19 14:27 .DS_Store
drwxr-xr-x   3 emattison  staff    96B Jan 22 11:09 .ipynb_checkpoints
drwxr-xr-x@  4 emattison  staff   128B Jan 19 14:27 Ex_Files_Python_Data_Visualization
-rw-r--r--@  1 emattison  staff   3.4M Jan 19 12:53 Ex_Files_Python_Data_Visualization.zip
-rwxrwxrwx@  1 emattison  staff    20K Jun  5  2020 Glossary_Python_for_Data_Visualization.pdf
-rw-r--r--@  1 emattison  staff    16K Jan 19 12:53 Glossary_Python_for_Data_Visualization.zip
-rw-r--r--   1 emattison  staff   153B Jan 22 11:41 Pipfile
-rw-r--r--   1 emattison  staff   1.1K Jan 22 11:41 Pipfile.lock
(dataviz) emattison@AMER-6J74N4MC dataviz % pwd
/Users/emattison/devel/dataviz
(dataviz) emattison@AMER-6J74N4MC dataviz % pip freeze
anyio==4.2.0
appnope==0.1.3
argon2-cffi==23.1.0
argon2-cffi-bindings==21.2.0
arrow==1.3.0
asttokens==2.4.1
async-lru==2.0.4
attrs==23.2.0
Babel==2.14.0
beautifulsoup4==4.12.3
bleach==6.1.0
certifi==2023.11.17
cffi==1.16.0
charset-normalizer==3.3.2
comm==0.2.1
debugpy==1.8.0
decorator==5.1.1
defusedxml==0.7.1
et-xmlfile==1.1.0
executing==2.0.1
fastjsonschema==2.19.1
fqdn==1.5.1
idna==3.6
ipykernel==6.29.0
ipython==8.20.0
ipywidgets==8.1.1
isoduration==20.11.0
jedi==0.19.1
Jinja2==3.1.3
json5==0.9.14
jsonpointer==2.4
jsonschema==4.21.0
jsonschema-specifications==2023.12.1
jupyter==1.0.0
jupyter-console==6.6.3
jupyter-events==0.9.0
jupyter-lsp==2.2.2
jupyter_client==8.6.0
jupyter_core==5.7.1
jupyter_server==2.12.5
jupyter_server_terminals==0.5.1
jupyterlab==4.0.11
jupyterlab-widgets==3.0.9
jupyterlab_pygments==0.3.0
jupyterlab_server==2.25.2
MarkupSafe==2.1.3
matplotlib-inline==0.1.6
mistune==3.0.2
nbclient==0.9.0
nbconvert==7.14.2
nbformat==5.9.2
nest-asyncio==1.5.9
notebook==7.0.7
notebook_shim==0.2.3
numpy==1.26.3
openpyxl==3.1.2
overrides==7.4.0
packaging==23.2
pandas==2.1.4
pandocfilters==1.5.1
parso==0.8.3
pexpect==4.9.0
platformdirs==4.1.0
prometheus-client==0.19.0
prompt-toolkit==3.0.43
psutil==5.9.7
ptyprocess==0.7.0
pure-eval==0.2.2
pycparser==2.21
Pygments==2.17.2
python-dateutil==2.8.2
python-json-logger==2.0.7
pytz==2023.3.post1
PyYAML==6.0.1
pyzmq==25.1.2
qtconsole==5.5.1
QtPy==2.4.1
referencing==0.32.1
requests==2.31.0
rfc3339-validator==0.1.4
rfc3986-validator==0.1.1
rpds-py==0.17.1
Send2Trash==1.8.2
six==1.16.0
sniffio==1.3.0
soupsieve==2.5
stack-data==0.6.3
terminado==0.18.0
tinycss2==1.2.1
tornado==6.4
traitlets==5.14.1
types-python-dateutil==2.8.19.20240106
tzdata==2023.4
uri-template==1.3.0
urllib3==2.1.0
wcwidth==0.2.13
webcolors==1.13
webencodings==0.5.1
websocket-client==1.7.0
widgetsnbextension==4.0.9
(dataviz) emattison@AMER-6J74N4MC dataviz % python
Python 3.11.2 (main, Apr  3 2023, 16:05:36) [Clang 14.0.3 (clang-1403.0.22.14.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> print "hello"
  File "<stdin>", line 1
    print "hello"
    ^^^^^^^^^^^^^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?
>>> print("hello")
hello
>>> 
(dataviz) emattison@AMER-6J74N4MC dataviz % python
Python 3.11.2 (main, Apr  3 2023, 16:05:36) [Clang 14.0.3 (clang-1403.0.22.14.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> 3j
3j
>>> weather_is_nice = False
>>> has_umbrella = True
>>> 
(dataviz) emattison@AMER-6J74N4MC dataviz % python
Python 3.11.2 (main, Apr  3 2023, 16:05:36) [Clang 14.0.3 (clang-1403.0.22.14.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> True
True
>>> False
False
>>> 'False'
'False'
>>> type(True)
<class 'bool'>
>>> type(TRUE)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'TRUE' is not defined. Did you mean: 'True'?
>>> TRUE
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'TRUE' is not defined. Did you mean: 'True'?
>>> true
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'true' is not defined. Did you mean: 'True'?
>>> None
>>> type(None)
<class 'NoneType'>
>>> if None:
...     print("is none")
... 
>>> bool(False)
False
>>> bool('False')
True
>>> 
(dataviz) emattison@AMER-6J74N4MC dataviz % python
Python 3.11.2 (main, Apr  3 2023, 16:05:36) [Clang 14.0.3 (clang-1403.0.22.14.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> 
(dataviz) emattison@AMER-6J74N4MC dataviz % python
Python 3.11.2 (main, Apr  3 2023, 16:05:36) [Clang 14.0.3 (clang-1403.0.22.14.1)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> range(8)
range(0, 8)
>>> list(range(8))
[0, 1, 2, 3, 4, 5, 6, 7]
>>> testbeds = list(range(4))
>>> testbeds
[0, 1, 2, 3]
>>> testbeds = list(range(4, 2))
>>> testbeds
[]
>>> testbeds = list(range(4:2))
  File "<stdin>", line 1
    testbeds = list(range(4:2))
                           ^
SyntaxError: invalid syntax
>>> testbeds = list(range(:4:2))
  File "<stdin>", line 1
    testbeds = list(range(:4:2))
                          ^
SyntaxError: invalid syntax
>>> testbeds = list(range(0:4:2))
  File "<stdin>", line 1
    testbeds = list(range(0:4:2))
                           ^
SyntaxError: invalid syntax
>>> testbeds = list(range(4))
>>> list(range(4)
... 
... )
[0, 1, 2, 3]
>>> testbeds = list(range(4))
>>> testbeds[::2]
[0, 2]
>>> testbeds = [range(4)]
>>> testbeds
[range(0, 4)]
>>> help range
  File "<stdin>", line 1
    help range
         ^^^^^
SyntaxError: invalid syntax
>>> help(range)

>>> 
>>> 
>>> 
>>> 
>>> testbeds = testbeds[::2]
>>> testbeds
[range(0, 4)]
>>> testbeds = list(range(4))
>>> testbeds = testbeds[::2]
>>> testbeds
[0, 2]
>>> l = [1, 2, "three"]
>>> l.remove("three")
>>> l
[1, 2]
>>> l.remove("three")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: list.remove(x): x not in list
>>> l = [1, 2, 2, "three"]
>>> l = [1, 2, "three", 2, 3]
>>> l.remove(2)
>>> l
[1, 'three', 2, 3]
>>> l.remove(2)
>>> l
[1, 'three', 3]
>>> l.remove(2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: list.remove(x): x not in list
>>> mylist = [1, 2, 3, 4, 5]
>>> 3 in mylist
True
>>> 8 in mylist
False
>>> mylist.index(3)
2
>>> mylist.index(8)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: 8 is not in list
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> dd = {}
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> dd
{}
>>> dd.update({"a": "apple"})
>>> 
>>> 
>>> 
>>> 
>>> dd
{'a': 'apple'}
>>> dd.update({"a": ["apple", "avacado"]})
>>> dd
{'a': ['apple', 'avacado']}
>>> 
>>> 
>>> 
>>> 
>>> 
>>> dd.update({"e": ["elephant"]})
>>> dd
{'a': ['apple', 'avacado'], 'e': ['elephant']}
>>> 
>>> 
>>> 
>>> 
>>> dd["e"] = "eagle"
>>> 
>>> 
>>> 
>>> dd
{'a': ['apple', 'avacado'], 'e': 'eagle'}
>>> dd["f"] = "eagle"
>>> dd
{'a': ['apple', 'avacado'], 'e': 'eagle', 'f': 'eagle'}
>>> mystring = "Don't step on the tiger"
>>> mystring
"Don't step on the tiger"
>>> mystring = 'He said "foo"'
>>> mystring
'He said "foo"'
>>> mls = """
... Don't 
... strep 
... on the 
... Tiger"""
>>> 
>>> mls
"\nDon't \nstrep \non the \nTiger"
>>> print(mls)

Don't 
strep 
on the 
Tiger
>>> 
>>> 
>>> 
>>> 
>>> 
>>> mc = {'firstname': 'Matt'}
>>> mc.update({'lastname': 'Craven'})
>>> mc.update({'email': 'mCraven@irobot.com'})
>>> 
>>> 
>>> 
>>> 
>>> mc
{'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com'}
>>> jl.copy(mc)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'jl' is not defined. Did you mean: 'l'?
>>> copy(mc)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'copy' is not defined
>>> jl = mc.copy()
>>> jl
{'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com'}
>>> jl.firstname = 'Jason'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'dict' object has no attribute 'firstname'
>>> jl["firstname"] = 'Jason'
>>> jl["lastname"] = 'Jason'
>>> jl["lastname"] = 'Lemmy'
>>> jl["email"] = 'jLemmy@irobot.com'
>>> 
>>> 
>>> 
>>> jl
{'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com'}
>>> sm = jl.copy()
>>> sm["firstname"] = 'Steve'
>>> sm["lastname"] = 'Mythos'
>>> sm["email"] = 'sMythos@irobot.com'
>>> 
>>> 
>>> 
>>> 
>>> 
>>> people = [sm, jl, mc]
>>> people
[{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com'}, {'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com'}, {'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com'}]
>>> people_dict = {"people": [sm, jl, mc]}
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> sm
{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com'}
>>> people = [sm, jl, mc]
>>> print(people)
[{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com'}, {'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com'}, {'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com'}]
>>> len(people)
3
>>> for person in people:
...    print(person)
... 
{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com'}
{'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com'}
{'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com'}
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> jumbled_list = ["b", "q", "a", "z"]
>>> sorted(jumbled_list)
['a', 'b', 'q', 'z']
>>> sorted(people)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: '<' not supported between instances of 'dict' and 'dict'
>>> 
>>> 
>>> 
>>> 
>>> 
>>> md_list = []
>>> 
>>> md_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> md_list
[[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> 
>>> 
>>> 
>>> for sublist in md_list:
...    print(sublist)
... 
[1, 2, 3]
[4, 5, 6]
[7, 8, 9]
>>> md_list[0][0]
1
>>> md_list[2][0]
7
>>> md_list[2][2]
9
>>> people
[{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com'}, {'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com'}, {'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com'}]
>>> people[0]
{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com'}
>>> people[0].update({'age': 25})
>>> people[1]
{'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com'}
>>> people[1].update({'age': 33})
>>> people[2].update({'age': 13})
>>> 
>>> 
>>> 
>>> 
>>> people
[{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com', 'age': 25}, {'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com', 'age': 33}, {'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com', 'age': 13}]
>>> 
>>> 
>>> 
>>> 
>>> 
>>> for person in people:
...    print(person)
... 
{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com', 'age': 25}
{'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com', 'age': 33}
{'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com', 'age': 13}
>>> 
>>> 
>>> 
>>> 
>>> sm
{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com', 'age': 25}
>>> sm.age
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'dict' object has no attribute 'age'
>>> sm.get("age")
25
>>> sm.get("height")
>>> sm["height"]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: 'height'
>>> js
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'js' is not defined. Did you mean: 'jl'?
>>> jl
{'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com', 'age': 33}
>>> 
>>> 
>>> 
>>> 
>>> sm.update({"height": 84})
>>> 
>>> 
>>> sm
{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com', 'age': 25, 'height': 84}
>>> people
[{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com', 'age': 25, 'height': 84}, {'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com', 'age': 33}, {'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com', 'age': 13}]
>>> jl.update({"height": 55})
>>> mc.update({"height": 65})
>>> 
>>> 
>>> 
>>> people
[{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com', 'age': 25, 'height': 84}, {'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com', 'age': 33, 'height': 55}, {'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com', 'age': 13, 'height': 65}]
>>> mc.update({"height": 99})
>>> mc
{'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com', 'age': 13, 'height': 99}
>>> people
[{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com', 'age': 25, 'height': 84}, {'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com', 'age': 33, 'height': 55}, {'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com', 'age': 13, 'height': 99}]
>>> 
>>> 
>>> 
>>> import pprint as pp
>>> 
>>> 
>>> 
>>> 
>>> pp(people)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'module' object is not callable
>>> pp.pprint(people)
[{'age': 25,
  'email': 'sMythos@irobot.com',
  'firstname': 'Steve',
  'height': 84,
  'lastname': 'Mythos'},
 {'age': 33,
  'email': 'jLemmy@irobot.com',
  'firstname': 'Jason',
  'height': 55,
  'lastname': 'Lemmy'},
 {'age': 13,
  'email': 'mCraven@irobot.com',
  'firstname': 'Matt',
  'height': 99,
  'lastname': 'Craven'}]
>>> 
>>> 
>>> 
>>> from pprint import pprint as pp
>>> pp(people)
[{'age': 25,
  'email': 'sMythos@irobot.com',
  'firstname': 'Steve',
  'height': 84,
  'lastname': 'Mythos'},
 {'age': 33,
  'email': 'jLemmy@irobot.com',
  'firstname': 'Jason',
  'height': 55,
  'lastname': 'Lemmy'},
 {'age': 13,
  'email': 'mCraven@irobot.com',
  'firstname': 'Matt',
  'height': 99,
  'lastname': 'Craven'}]
>>> 
>>> 
>>> 
>>> 
>>> 
>>> heights = []
>>> for person in people:
...     print(person.get("height"))
...     heights.append(person.get("height"))
... 
84
55
99
>>> heights
[84, 55, 99]
>>> people[2].remove('height')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'dict' object has no attribute 'remove'
>>> people[2].delete('height')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'dict' object has no attribute 'delete'
>>> people[2]["height"] = None
>>> people
[{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com', 'age': 25, 'height': 84}, {'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com', 'age': 33, 'height': 55}, {'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com', 'age': 13, 'height': None}]
>>> del people[2]["height"]
>>> people
[{'firstname': 'Steve', 'lastname': 'Mythos', 'email': 'sMythos@irobot.com', 'age': 25, 'height': 84}, {'firstname': 'Jason', 'lastname': 'Lemmy', 'email': 'jLemmy@irobot.com', 'age': 33, 'height': 55}, {'firstname': 'Matt', 'lastname': 'Craven', 'email': 'mCraven@irobot.com', 'age': 13}]
>>> 
>>> 
>>> 
>>> 
>>> 
>>> for person in people:
...     print(person.get("height"))
... 
KeyboardInterrupt
>>> heights = []
>>> for person in people:
...     print(person.get("height"))
...     heights.append(person.get("height"))
... 
84
55
None
>>> heights
[84, 55, None]
>>> from statistics import mean
>>> mean(heights)
Traceback (most recent call last):
  File "/Users/emattison/.pyenv/versions/3.11.2/lib/python3.11/statistics.py", line 327, in _exact_ratio
    return (x.numerator, x.denominator)
            ^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'numerator'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/emattison/.pyenv/versions/3.11.2/lib/python3.11/statistics.py", line 430, in mean
    T, total, n = _sum(data)
                  ^^^^^^^^^^
  File "/Users/emattison/.pyenv/versions/3.11.2/lib/python3.11/statistics.py", line 193, in _sum
    for n, d in map(_exact_ratio, values):
  File "/Users/emattison/.pyenv/versions/3.11.2/lib/python3.11/statistics.py", line 330, in _exact_ratio
    raise TypeError(msg)
TypeError: can't convert type 'NoneType' to numerator/denominator
>>> people[2]["height"] = 55
>>> heights = []
>>> for person in people:
...     heights.append(person.get("height"))
... 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> heights
[84, 55, 55]
>>> mean(heights)
64.66666666666667
>>> round(mean(heights))
65
>>> max(heights)
84
>>> min(heights)
55
>>> min(people)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: '<' not supported between instances of 'dict' and 'dict'
>>> 
>>> 
>>> 
>>> 
>>> 
